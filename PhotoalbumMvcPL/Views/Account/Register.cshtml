@model PhotoalbumMvcPL.ViewModels.RegisterViewModel

@{
    ViewBag.Title = "Register";
}
@*браузеры будут загружать файлы должным образом только тогда, когда атрибут enctype в HTML-элементе form содержит значение multipart/form-data. Без атрибута enctype браузер будет передавать только имя файла, а не его содержимое*@
@using (Html.BeginForm("Register", "Account",
  FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()@*Генерирует скрытое поле формы (токен борьбы с фальсификацией), которое проверяется при отправке формы.*@
    @Html.ValidationSummary(true)@*хелпер для отображения сообщений об ошибках при валидации модели Если параметр равен true, то вверху будут отображаться только сообщения об ошибках уровня модели, а специфические ошибки будут отображаться рядом с полями ввода*@
    //Html.EditorForModel()Возвращает HTML-элемент ввода (input) для каждого свойства в модели
    <fieldset>
        <legend>Регистрация</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ConfirmPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ConfirmPassword)
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>
        
        
        
        
        

      
        <div class="editor-label">
            @Html.Label("Введите капчу")
        </div>
        <div class="editor-label">
            <label>
                <img src="@Url.Action("Captcha", "Account")" alt="captcha" />
            </label>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Captcha)
            @Html.ValidationMessageFor(model => model.Captcha)
        </div>
        
        
        
        @*Для загрузки изображений*@
        <div class="editor-label">
            @Html.LabelFor(model => model.UserPhotoe)
        </div>
        
        <div class ="editor-field">
            Upload new image:
            <input type="file" name="Image" />
        </div>



            @*      <div class="editor-label">
                @Html.LabelFor(model => model.AddedDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AddedDate)
                @Html.ValidationMessageFor(model => model.AddedDate)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.AvatarPath)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AvatarPath)
                @Html.ValidationMessageFor(model => model.AvatarPath)
            </div>*@

            <p>
                <input type="submit" value="Зарегистрироваться" />
            </p>
</fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
